---
apiVersion: v1
kind: Namespace
metadata:
  name: resume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume
  namespace: resume
  labels:
    app: resume
spec:
  replicas: 2
  selector:
    matchLabels:
      app: resume
  template:
    metadata:
      labels:
        app: resume
    spec:
      containers:
        - name: resume
          image: acrk3sdev.azurecr.io/resume:latest  # Updated by CI/CD
          ports:
            - containerPort: 80
              name: http
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
        - name: nginx-exporter
          image: nginx/nginx-prometheus-exporter:0.11.0
          args:
            - -nginx.scrape-uri=http://localhost:80/nginx_status
          ports:
            - containerPort: 9113
              name: metrics
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: resume
  namespace: resume
  labels:
    app: resume
spec:
  selector:
    app: resume
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
    - name: metrics
      protocol: TCP
      port: 9113
      targetPort: metrics
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: resume
  namespace: resume
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - resume.princetonstrong.online
      secretName: resume-tls
  rules:
    - host: resume.princetonstrong.online
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: resume
                port:
                  number: 80
